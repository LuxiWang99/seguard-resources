strict digraph  {
	graph ["graph"="{}"];
	audio_info	 [domain=library,
		type=merged];
	"<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [domain=library,
		type=SENSITIVE_METHOD];
	ContentResolver	 [domain=library,
		type=merged];
	"<android.net.Uri: android.net.Uri parse(java.lang.String)>" -> ContentResolver	 [deps=DOMINATE,
		type=DEP];
	"<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	"<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops	 [domain=library,
		type=merged];
	"<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	cryptoops -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	cryptoops -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	cryptoops -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	"<java.lang.System: void loadLibrary(java.lang.String)>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"<android.transition.TransitionSet: android.transition.Transition clone()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL",
		type=DEP];
	"<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"<android.telephony.CellInfoCdma: int hashCode()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	"<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"<android.transition.TransitionSet: java.lang.Object clone()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	"<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [domain=library,
		type=SENSITIVE_METHOD];
	cryptoops -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"addFlags/setFlags/setContentView"	 [domain=library,
		type=merged];
	cryptoops -> "addFlags/setFlags/setContentView"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"java.lang.Runtime.exec"	 [domain=library,
		type=merged];
	cryptoops -> "java.lang.Runtime.exec"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	delete_files	 [domain=library,
		type=merged];
	cryptoops -> delete_files	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	write_file	 [domain=library,
		type=merged];
	cryptoops -> write_file	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-DOMINATE",
		type=DEP];
	list_files	 [domain=library,
		type=merged];
	cryptoops -> list_files	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	cryptoops -> audio_info	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	phone_id_info	 [domain=library,
		type=merged];
	cryptoops -> phone_id_info	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops	 [domain=library,
		type=merged];
	cryptoops -> sharedprefops	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	intent	 [domain=library,
		type=merged];
	cryptoops -> intent	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP"	 [domain=library,
		type=merged];
	cryptoops -> "Internet/HTTP"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW",
		type=DEP];
	location_api	 [domain=library,
		type=merged];
	cryptoops -> location_api	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	cryptoops -> ContentResolver	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	network_info	 [domain=library,
		type=merged];
	cryptoops -> network_info	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	"Internet/HTTP" -> write_file	 [deps=DOMINATE,
		type=DEP];
	"Internet/HTTP" -> cryptoops	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> delete_files	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> list_files	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> location_api	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> network_info	 [deps=CALL,
		type=DEP];
	"Internet/HTTP" -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Internet/HTTP" -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Internet/HTTP" -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> "addFlags/setFlags/setContentView"	 [deps="CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Internet/HTTP" -> "java.lang.Runtime.exec"	 [deps="CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> audio_info	 [deps="CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> intent	 [deps="CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> phone_id_info	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	"Internet/HTTP" -> sharedprefops	 [deps="CALL-CALL-CALL-CALL",
		type=DEP];
	"Internet/HTTP" -> ContentResolver	 [deps="CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"<java.lang.Thread: void setPriority(int)>"	 [domain=library,
		type=SENSITIVE_METHOD];
	BIG_INT	 [domain=library,
		type=CONST_INT];
	BIG_INT -> "addFlags/setFlags/setContentView"	 [deps=DATAFLOW,
		type=DEP];
	BIG_INT -> intent	 [deps=DATAFLOW,
		type=DEP];
	BIG_INT -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DATAFLOW-DOMINATE",
		type=DEP];
	BIG_INT -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="DATAFLOW-DOMINATE",
		type=DEP];
	"addFlags/setFlags/setContentView" -> intent	 [deps=DOMINATE,
		type=DEP];
	"addFlags/setFlags/setContentView" -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DOMINATE-DOMINATE",
		type=DEP];
	"addFlags/setFlags/setContentView" -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="DOMINATE-DOMINATE",
		type=DEP];
	"<android.view.ViewStub: void draw(android.graphics.Canvas)>"	 [domain=library,
		type=SENSITIVE_METHOD];
	"content:##sms"	 [domain=library,
		type=CONST_STRING];
	"content:##sms" -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps=DATAFLOW,
		type=DEP];
	"content:##sms" -> ContentResolver	 [deps=DATAFLOW,
		type=DEP];
	smsops	 [domain=library,
		type=SENSITIVE_METHOD];
	su	 [domain=library,
		type=CONST_STRING];
	su -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps=DATAFLOW,
		type=DEP];
	su -> "addFlags/setFlags/setContentView"	 [deps=DATAFLOW,
		type=DEP];
	su -> intent	 [deps=DATAFLOW,
		type=DEP];
	su -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DATAFLOW-DOMINATE",
		type=DEP];
	network_info -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	network_info -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	network_info -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	network_info -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> "addFlags/setFlags/setContentView"	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	network_info -> "java.lang.Runtime.exec"	 [deps="DATAFLOW-CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	network_info -> delete_files	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> write_file	 [deps="DATAFLOW-CALL-DOMINATE",
		type=DEP];
	network_info -> audio_info	 [deps="DATAFLOW-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> intent	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	network_info -> location_api	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> ContentResolver	 [deps="DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	network_info -> list_files	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> cryptoops	 [deps="DATAFLOW-CALL-CALL",
		type=DEP];
	network_info -> phone_id_info	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	network_info -> sharedprefops	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	network_info -> "Internet/HTTP"	 [deps="DATAFLOW-CALL",
		type=DEP];
	list_files -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	list_files -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	list_files -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL",
		type=DEP];
	list_files -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "addFlags/setFlags/setContentView"	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	list_files -> "java.lang.Runtime.exec"	 [deps="DATAFLOW-CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	list_files -> delete_files	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> write_file	 [deps="DATAFLOW-CALL-DATAFLOW-DOMINATE",
		type=DEP];
	list_files -> cryptoops	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> audio_info	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	list_files -> phone_id_info	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> sharedprefops	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> intent	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL",
		type=DEP];
	list_files -> "Internet/HTTP"	 [deps="DATAFLOW-CALL-DATAFLOW",
		type=DEP];
	list_files -> location_api	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	list_files -> ContentResolver	 [deps="DATAFLOW-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	list_files -> network_info	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	intent -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps=DOMINATE,
		type=DEP];
	intent -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps=DOMINATE,
		type=DEP];
	intent -> "addFlags/setFlags/setContentView"	 [deps=DOMINATE,
		type=DEP];
	phone_id_info -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	phone_id_info -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	phone_id_info -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL",
		type=DEP];
	phone_id_info -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "addFlags/setFlags/setContentView"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	phone_id_info -> "java.lang.Runtime.exec"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> delete_files	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> write_file	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-DOMINATE",
		type=DEP];
	phone_id_info -> audio_info	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> list_files	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> cryptoops	 [deps="DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> sharedprefops	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> intent	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL",
		type=DEP];
	phone_id_info -> "Internet/HTTP"	 [deps="DATAFLOW-CALL-CALL-DATAFLOW",
		type=DEP];
	phone_id_info -> location_api	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	phone_id_info -> ContentResolver	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	phone_id_info -> network_info	 [deps="DATAFLOW-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	sharedprefops -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	sharedprefops -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="CALL-DATAFLOW-CALL-CALL",
		type=DEP];
	sharedprefops -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "addFlags/setFlags/setContentView"	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	sharedprefops -> "java.lang.Runtime.exec"	 [deps="CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> delete_files	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> write_file	 [deps="CALL-DATAFLOW-DOMINATE",
		type=DEP];
	sharedprefops -> audio_info	 [deps="CALL-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> list_files	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> cryptoops	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> phone_id_info	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> intent	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL",
		type=DEP];
	sharedprefops -> "Internet/HTTP"	 [deps="CALL-DATAFLOW",
		type=DEP];
	sharedprefops -> location_api	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	sharedprefops -> ContentResolver	 [deps="CALL-DATAFLOW-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	sharedprefops -> network_info	 [deps="CALL-DATAFLOW-CALL",
		type=DEP];
	background	 [domain=library,
		type=entrypoint];
	background -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	background -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	background -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "addFlags/setFlags/setContentView"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	background -> "java.lang.Runtime.exec"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> list_files	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> delete_files	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> write_file	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> cryptoops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> audio_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> phone_id_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	background -> sharedprefops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> intent	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> "Internet/HTTP"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL",
		type=DEP];
	background -> location_api	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	background -> ContentResolver	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	background -> network_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity"	 [domain=library,
		type=entrypoint];
	"user activity" -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"user activity" -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"user activity" -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "addFlags/setFlags/setContentView"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"user activity" -> "java.lang.Runtime.exec"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-DATAFLOW-DATAFLOW-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> list_files	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> delete_files	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> write_file	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-DOMINATE",
		type=DEP];
	"user activity" -> cryptoops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> audio_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> phone_id_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-DATAFLOW-CALL",
		type=DEP];
	"user activity" -> sharedprefops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> intent	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "Internet/HTTP"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"user activity" -> location_api	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> ContentResolver	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"user activity" -> network_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"user activity" -> smsops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<java.lang.Thread: void setPriority(int)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"user activity" -> "<android.view.ViewStub: void draw(android.graphics.Canvas)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run"	 [domain=library,
		type=entrypoint];
	"Thread run" -> "Internet/HTTP"	 [deps=FROM_SENSITIVE_PARENT_TO_SENSITIVE_API,
		type=DEP];
	"Thread run" -> "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Thread run" -> "<android.content.Context: void sendBroadcast(android.content.Intent)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Thread run" -> "<android.net.Uri: android.net.Uri parse(java.lang.String)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> "<android.telephony.CellSignalStrengthLte: int getAsuLevel()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> "<android.telephony.CellSignalStrengthCdma: int hashCode()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> "<java.lang.System: void loadLibrary(java.lang.String)>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> "<android.transition.TransitionSet: android.transition.Transition clone()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"Thread run" -> "<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> "<android.telephony.CellInfoCdma: int hashCode()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> "<android.telephony.CellSignalStrengthCdma: int getDbm()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> "<android.transition.TransitionSet: java.lang.Object clone()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> "<android.telephony.CellSignalStrengthWcdma: int getDbm()>"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> "addFlags/setFlags/setContentView"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Thread run" -> "java.lang.Runtime.exec"	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> list_files	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> delete_files	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> write_file	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> cryptoops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> audio_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL",
		type=DEP];
	"Thread run" -> phone_id_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-DATAFLOW-CALL",
		type=DEP];
	"Thread run" -> sharedprefops	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> intent	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL",
		type=DEP];
	"Thread run" -> location_api	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
	"Thread run" -> ContentResolver	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL-CALL-CALL-CALL-CALL-DOMINATE",
		type=DEP];
	"Thread run" -> network_info	 [deps="FROM_SENSITIVE_PARENT_TO_SENSITIVE_API-CALL",
		type=DEP];
}
